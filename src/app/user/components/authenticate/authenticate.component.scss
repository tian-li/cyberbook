div, form {
  display: flex;
}

.auth-wrapper {
  width: 100%;
  justify-content: center;
}

.background {
  display: block;
  position: fixed;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-image: url("../../../../assets/images/登录背景.png");
  background-position: center;
}

.auth-container {
  height: 100%;
  max-width: 90%;
  width: 400px;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: fixed;

  .logo {
    flex-direction: column;
    align-items: center;
    z-index: 1;
    margin-bottom: 1.5rem;
    font-family: "YouSheBiaoTiHei", "Yuanti SC", sans-serif;

    img {
      display: flex;
      width: 50%;
    }

    .logo-zh {
      font-size: 3rem;
    }

    .logo-en {
      font-size: 1.5rem;
      margin-top: -16px;
    }

    .title {
      font-size: 2rem;
      justify-content: center;
    }
  }

  form {
    flex-direction: column;
    width: 80%;

    ::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex {
      background-color: #9291917d;
      backdrop-filter: blur(5px);
    }

    .hidden {
      display: none;
    }

    .username {
      width: 100%;
    }

    mat-form-field {
      margin-bottom: 5px;
    }
  }

  .actions {
    flex-direction: column;
    width: 80%;
    margin-top: 1rem;

    .button-register {
      width: 100%;
    }

    .sub-actions {
      font-size: 0.8rem;
      margin-top: 1rem;
      justify-content: space-between;
      opacity: 0.99;
    }
  }
}


//@mixin glitchCopy {
//  content: attr(data-text);
//  position: absolute;
//  top: 0;
//  //left: 0;
//  width: 100%;
//  height: 100%;
//}
//
//.glitch {
//  animation: glitch-skew 1s infinite linear alternate-reverse;
//
//  // Creates a copy before our text.
//  &::before {
//    // Duplicates our text with the mixin.
//    @include glitchCopy;
//    // Scoots text slightly to the left for the color offset.
//    left: 3px;
//    // Creates the color 'shadow' that happens on the glitch.
//    text-shadow: -3px 0 #ff00c1;
//    /* Creates an initial clip for our glitch. This works in
//    a typical top,right,bottom,left fashion and creates a mask
//    to only show a certain part of the glitch at a time. */
//    clip: rect(44px, 450px, 56px, 0);
//    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
//    with an alternating animation to keep things fresh. */
//    animation: glitch-anim 5s infinite linear alternate-reverse;
//  }
//
//  // Creates a copy after our text. Note comments from ::before.
//  &::after {
//    @include glitchCopy;
//    left: -3px;
//    text-shadow: -3px 0 #00fff9, 3px 3px #ff00c1;
//    animation: glitch-anim2 2s infinite linear alternate-reverse;
//  }
//}
//
//@keyframes glitch-anim {
//  $steps: 20;
//  @for $i from 0 through $steps {
//    #{percentage($i*(1/$steps))} {
//      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
//      transform: skew((random(100) / 100) + deg);
//    }
//  }
//}
//
//// Same deal, just duplicated for ultra randomness.
//@keyframes glitch-anim2 {
//  $steps: 20;
//  @for $i from 0 through $steps {
//    #{percentage($i*(1/$steps))} {
//      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
//      transform: skew((random(100) / 100) + deg);
//    }
//  }
//}
//
//// Does the same deal as before, but now only skews. Used for main text.
//@keyframes glitch-skew {
//  $steps: 10;
//  @for $i from 0 through $steps {
//    #{percentage($i*(1/$steps))} {
//      transform: skew(0);
//    }
//  }
//}

.glitch {
  font-size: 130px;
  line-height: 1;
  font-family: 'Poppins', sans-serif;
  font-weight: 700;
  position:absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  margin: 0;
  text-decoration: none;
  color: #fff;
  &:before,
  &:after{
    display: block;
    content: '17';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    opacity: .8;
  }
  &:after {
    color: #f0f;
    z-index: -2;
  }
  &:before {
    color: #0ff;
    z-index: -1;
  }
  &:hover {
    &:before {
      animation: glitch 12s cubic-bezier(.25, .46, .45, .94) both infinite
    }
    &:after {
      animation: glitch 12s cubic-bezier(.25, .46, .45, .94) reverse both infinite
    }
  }
}
@keyframes glitch {
  0% {
    -webkit-transform: translate(0);
    transform: translate(0)
  }
  20% {
    -webkit-transform: translate(-5px, 5px);
    transform: translate(-5px, 5px)
  }
  40% {
    -webkit-transform: translate(-5px, -5px);
    transform: translate(-5px, -5px)
  }
  60% {
    -webkit-transform: translate(5px, 5px);
    transform: translate(5px, 5px)
  }
  80% {
    -webkit-transform: translate(5px, -5px);
    transform: translate(5px, -5px)
  }
  to {
    -webkit-transform: translate(0);
    transform: translate(0)
  }
}
